
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
3) Let's install PHP 7.2
-------------------------------------------------------------------------
Install PHP 7.2 on Ubuntu 16.04
PHP 7.2 is the latest stable version of PHP and has many new features, improvements, and bug fixes. 
You should definitely use it if you want a better, faster website/application.

(*)Thanks to Ondrej Surý for maintaining PPA of most the popular PHP versions on launchpad.
-------------------------------------------------------------------------

	$ sudo apt-get install python-software-properties

	$ sudo add-apt-repository ppa:ondrej/php

	$ sudo apt-get update

-------------------------------------------------------------------------
Install PHP 7.2
	$ sudo apt-get install -y php7.2
-------------------------------------------------------------------------
check if PHP 7.2 is installed on your server, run the following command:
	$ php -v
-------------------------------------------------------------------------
	$ php -m

Let's check if we have all packeges that Laravel needs.
Go to Laravel installation documentation.
-------------------------------------------------------------------------
Install PHP 7.2 modules
	$ apt-get install php-pear php7.2-curl php7.2-dev php7.2-gd php7.2-mbstring php7.2-zip php7.2-mysql php7.2-xml
-------------------------------------------------------------------------
Let's check if we have all packeges that Laravel needs.
	$ php -m
-------------------------------------------------------------------------

Testing PHP Processing on your Web Server
In order to test that your system is configured properly for PHP, create a very basic PHP script called info.php. 
In order for Apache to find this file and serve it correctly, it must be saved to a very specific directory, 
which is called the "web root".
-------------------------------------------------------------------------
Directory located at /var/www/html/. 
Create the file at that location by running:
	$ sudo nano /var/www/html/info.php
-------------------------------------------------------------------------
This will open a blank file. 
Add the following text, which is valid PHP code, inside the file:

<?php
	phpinfo();
?>

When you are finished, save and close the file by pressing "CTRL"+"X". 
Confirm the save by typing "Y" and then hit "ENTER" to verify the file save location.
-------------------------------------------------------------------------
In most cases, you will want to modify the way that Apache serves files when 
a directory is requested. Currently, if a user requests a directory from the server, 
Apache will first look for a file called index.html. We want to tell the web server 
to prefer PHP files over others, so make Apache look for an index.php file first.

To do this, type this command to open the dir.conf file in a text editor with root privileges:

	$ sudo nano /etc/apache2/mods-enabled/dir.conf

-------------------------------------------------------------------------
It will look like this:
/etc/apache2/mods-enabled/dir.conf

<IfModule mod_dir.c>
    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
</IfModule>

Move the PHP index file (highlighted above) to the first position after the DirectoryIndex specification, like this:
/etc/apache2/mods-enabled/dir.conf

<IfModule mod_dir.c>
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
</IfModule>

When you are finished, save and close the file by pressing "CTRL"+"X". 
Confirm the save by typing "Y" and then hit "ENTER" to verify the file save location.

-------------------------------------------------------------------------
After this, restart the Apache web server in order for your changes to be recognized. Do this by typing this:

    $ sudo systemctl restart apache2
-------------------------------------------------------------------------
You can also check on the status of the apache2 service using systemctl:

    $ sudo systemctl status apache2

Press "q" to exit.
-------------------------------------------------------------------------

Now you can test whether your web server is able to correctly display content generated by this PHP script. 
To try this out, visit this page in your web browser. You'll need your server's public IP address again.
http://your_server_ip/info.php

This page provides some basic information about your server from the perspective of PHP. 
It is useful for debugging and to ensure that your settings are being applied correctly.

-------------------------------------------------------------------------
You probably want to remove this file after this test because it could actually give information about your 
server to unauthorized users. To do this, run the following command:

	$ sudo rm /var/www/html/info.php

-------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////
